@import '../style_imports/fonts';

.movable-modal {
    position: absolute;
    border: 1px solid rgb(204, 204, 204);
    background-color: rgb(255, 255, 255);
    z-index: 1000;
    width: 50%;
    max-width: 650px;
    height: fit-content;
    display: flex;
    flex-direction: column;
    overflow: hidden;

    @media screen and (max-width: 430px) {
        width: 100%;
        height: 700px;
        max-width: none;
        left: 50%;
        top: 55%;
        transform: translate(-50%, -50%);
    }
}

.modal-header {
    background-color: #f1f1f1;
    cursor: move;
    display: flex;
    flex-direction: column;

    &:hover {
        cursor: auto;
    }

    & * {
        font-weight: bold;
    }
}

.title-x-div {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: flex-start;
}

.title-bar {
    background-color: #011E75;
    color: white;
    width: 100%;
    padding: 5px 10px;
    border-top: 1px white solid;
    border-right: 1px black solid;
    border-bottom: 1px black solid;
    border-left: 1px white solid;
    margin-top: 2px;
}

.close {
    width: 40px;
    height: 40px;
    margin-left: 5px;
}

.close-btn {
    width: 40px;
    height: 40px;
    position: absolute;
    top: 0;
    right: 0;

    &.invisible {
        display: none;
    }
}

.close-btn-hover {
    width: 40px;
    height: 40px;
    position: absolute;
    top: 0;
    right: 0;
}

.name-tab-div {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 600px;
    padding: 10px;

    &>div {
        font-size: medium;
    }

    @media screen and (max-width: 430px) {
        width: 400px;
        overflow: scroll;
    }
}

.name-tab {
    border-bottom: 1px transparent solid;
    max-width: 110px;
    text-wrap: nowrap;

    &:hover {
        cursor: pointer;
        border-bottom: 1px gray solid;
    }

    &.match {
        border-bottom: 1px black solid;
    }

    @media screen and (max-width: 430px) {
        margin: 0px 10px;
    }

}

.modal-content {
    height: 900px;
    width: 100%;
    overflow-y: scroll;
    display: flex;
    flex-direction: column;
}

.close {
    float: right;
    cursor: pointer;
}

.invisible {
    display: none;
}

// onClick={() => {
//     if (name === header) return;
//     Object.keys(nameObj).forEach(el => closeModal(nameObj[el]))
//     .then(openModal(nameObj[name]))
// }}